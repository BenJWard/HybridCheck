% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/DataStructures.R
\docType{class}
\name{HCseq}
\alias{HCseq}
\title{An internal Reference Class to represent a DNA alignment, read from a FASTA file.}
\description{
An internal Reference Class to represent a DNA alignment, read from a FASTA file.
}
\section{Fields}{

\describe{
\item{\code{FullSequence}}{A DNAStringSet containing the full sequence alignment.}

\item{\code{InformativeSequence}}{A DNAStringSet containing the elignment, with uninformative sites removed.}

\item{\code{InformativeBp}}{An integer vector containing the base positions that are informative.}

\item{\code{ReferenceSeq}}{A character vector of length one with the sequence name that is the reference.}

\item{\code{Populations}}{A list of population definitions - a list of vectors containing sequence names.}
}}
\section{Methods}{

\describe{
\item{\code{InputDNA(intarget)}}{Reads in sequences from file and appropriately
modifies fields of the object.}

\item{\code{enforceDNA()}}{Enforces some rules about the content of the 
sequence object and throws errors should they occur.}

\item{\code{getFullBp()}}{Returns a vector containing the numbers of the base
positions in the aligned sequences.}

\item{\code{getFullLength()}}{Returns the length in base pairs, of the aligned 
sequences.}

\item{\code{getSequenceNames()}}{Returns a character vector of the sequence names.}

\item{\code{hasDNA()}}{Returns true if a DNA sequence alignment has been
read in and stored in the object. Otherwise returns false.}

\item{\code{hasPopulations()}}{Returns TRUE when a set of populations has been
defined. Otherwise returns FALSE.}

\item{\code{htmlSummary()}}{Creates a character vector of the summary of the
sequence object, formatted as HTML.}

\item{\code{initialize(sequenceInput = NULL)}}{Initializes the object, may be provided with a
filepath to a sequence file, currently only FASTA
is supported.}

\item{\code{namesOfPopulations()}}{Returns the names of the populations.}

\item{\code{numberOfPopulations()}}{Returns the number of populations assigned.}

\item{\code{numberOfSequences()}}{Returns the number of sequences in the stored
alignment.}

\item{\code{oneSeqOnePop()}}{Function assigns one population per sequence.}

\item{\code{pullTriplet(selection)}}{Extracts from the sequence object, a triplet of
sequences.}

\item{\code{setPopulations(pops)}}{Define which sequences form a population. Provide a
list of vectors containing either integers or
sequence names.}

\item{\code{textSummary()}}{Creates a character vector of the summary of the
sequence object.}
}}

